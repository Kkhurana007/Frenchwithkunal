---
title: ""

format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
          <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
          <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
---

```{=html}
<div id="react-root"></div>
<script type="text/babel">

   
  function ForgetPassword() {
    const { useState } = React;

    const [isLoading, setIsLoading] = useState(false);
    const [formData, setFormData] = useState({
   
      password: "",
      confirmPassword: "",
    });

   const handleSubmit = async (e) => {
  e.preventDefault();
  if (formData.password !== formData.confirmPassword) {
    alert("Passwords do not match");
    return;
  }

  setIsLoading(true);
  

      const token = new URLSearchParams(window.location.search).get("token");

  try {
    const response = await fetch("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/forget-password/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      
      },
       
      body: JSON.stringify({email: formData.email}),
    });

    const data = await response.json();
     
    if (data.success) {
   
      alert(data.message);
 


      window.location.href = "https://frenchwithkunal.ca/"; // Redirect to login page
    } else {
      alert(data.message || "Failed to reset password.");
    }
  } catch (error) {
    alert("Server Error. Please try again.");
  } finally {
    setIsLoading(false);
  }
};


    return (
      <div
      style={{
    height: "100vh",
    width: "100vw",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    background: "linear-gradient(45deg, #FF6B6B, #4ECDC4)",
    fontFamily: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",
    margin: 0,
    padding: 0,
    position: "fixed",
    top: 0,
    left: 0,
  }}
      >
        <div
          style={{
            width: "100%",
            maxWidth: "400px",
            padding: "40px",
            borderRadius: "20px",
            backgroundColor: "rgba(255, 255, 255, 0.9)",
            backdropFilter: "blur(10px)",
            boxShadow: "0 8px 32px 0 rgba(31, 38, 135, 0.37)",
            border: "1px solid rgba(255, 255, 255, 0.18)",
            overflowY: "auto",
            maxHeight: "90vh",
          }}
        >
          

          <form onSubmit={handleSubmit} style={{ width: "100%" }}>
            {[ "email", ].map((field, index) => (
              <div key={index} style={{ marginBottom: "20px" }}>
                
                <input
                  id={field}
                  type={"email"}
                  value={formData[field]}
                  onChange={(e) => setFormData({ ...formData, [field]: e.target.value })}
                  required
                  placeholder={`Enter your email`}
                  style={{
                    width: "100%",
                    padding: "12px 16px",
                    border: "2px solid #e1e1e1",
                    borderRadius: "12px",
                    fontSize: "16px",
                    outline: "none",
                    transition: "all 0.3s ease",
                    backgroundColor: "rgba(255, 255, 255, 0.9)",
                  }}
                />
              </div>
            ))}

            <button
              type="submit"
              disabled={isLoading}
              style={{
                width: "100%",
                padding: "14px",
                backgroundColor: "#4ECDC4",
                color: "white",
                border: "none",
                borderRadius: "12px",
                fontSize: "16px",
                fontWeight: "600",
                cursor: "pointer",
                transition: "all 0.3s ease",
              }}
            >
              {isLoading ? "Loading..." : "Search And Reset"}
            </button>

           
          </form>
        </div>
      </div>
    );
  }

  ReactDOM.render(
    <ForgetPassword />,
    document.getElementById('react-root')
  );
</script>
