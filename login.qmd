---
title: ""



format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
          <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
          <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
---

```{=html}
<div id="react-root"></div>
<script type="text/babel">
  function LoginForm() {


    const { useState } = React;

  const [isLoading, setIsLoading] = useState(false)
  const [formData, setFormData] = useState({
    email: "",
    password: "",
  })

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsLoading(true)
    // Simulate API call
    await new Promise((resolve) => setTimeout(resolve, 1000))
    setIsLoading(false)
  }

  return (
    <div
      style={{
    height: "100vh",
    width: "100vw",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    background: "linear-gradient(45deg, #FF6B6B, #4ECDC4)",
    fontFamily: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",
    margin: 0,
    padding: 0,
    position: "fixed",
    top: 0,
    left: 0,
  }}
    >
      <div
        style={{
          width: "100%",
          maxWidth: "400px",
          margin: "20px",
          padding: "40px",
          borderRadius: "20px",
          backgroundColor: "rgba(255, 255, 255, 0.9)",
          backdropFilter: "blur(10px)",
          boxShadow: "0 8px 32px 0 rgba(31, 38, 135, 0.37)",
          border: "1px solid rgba(255, 255, 255, 0.18)",
        }}
      >
        <h1
          style={{
            margin: "0 0 24px 0",
            fontSize: "32px",
            fontWeight: "700",
            color: "#1a1a1a",
            textAlign: "center",
            background: "linear-gradient(45deg, #FF6B6B, #4ECDC4)",
            WebkitBackgroundClip: "text",
            WebkitTextFillColor: "transparent",
          }}
        >
          Welcome Back
        </h1>

        <form onSubmit={handleSubmit} style={{ width: "100%" }}>
          <div style={{ marginBottom: "20px" }}>
            <label
              htmlFor="email"
              style={{
                display: "block",
                marginBottom: "8px",
                fontSize: "14px",
                color: "#666",
                fontWeight: "500",
              }}
            >
              Email
            </label>
            <input
              id="email"
              type="email"
              value={formData.email}
              onChange={(e) => setFormData({ ...formData, email: e.target.value })}
              required
              placeholder="Enter your email"
              style={{
                width: "100%",
                padding: "12px 16px",
                border: "2px solid #e1e1e1",
                borderRadius: "12px",
                fontSize: "16px",
                outline: "none",
                transition: "all 0.3s ease",
                backgroundColor: "rgba(255, 255, 255, 0.9)",
              }}
              onFocus={(e) => {
                e.target.style.borderColor = "#4ECDC4"
                e.target.style.boxShadow = "0 0 0 4px rgba(78, 205, 196, 0.1)"
              }}
              onBlur={(e) => {
                e.target.style.borderColor = "#e1e1e1"
                e.target.style.boxShadow = "none"
              }}
            />
          </div>

          <div style={{ marginBottom: "20px" }}>
            <div
              style={{
                display: "flex",
                justifyContent: "space-between",
                alignItems: "center",
                marginBottom: "8px",
              }}
            >
              <label
                htmlFor="password"
                style={{
                  fontSize: "14px",
                  color: "#666",
                  fontWeight: "500",
                }}
              >
                Password
              </label>
              <button
                type="button"
                style={{
                  background: "none",
                  border: "none",
                  color: "#4ECDC4",
                  fontSize: "14px",
                  cursor: "pointer",
                  padding: "0",
                  textDecoration: "underline",
                }}
                onMouseOver={(e) => (e.currentTarget.style.color = "#FF6B6B")}
                onMouseOut={(e) => (e.currentTarget.style.color = "#4ECDC4")}
              >
                Forgot password?
              </button>
            </div>
            <input
              id="password"
              type="password"
              value={formData.password}
              onChange={(e) => setFormData({ ...formData, password: e.target.value })}
              required
              placeholder="Enter your password"
              style={{
                width: "100%",
                padding: "12px 16px",
                border: "2px solid #e1e1e1",
                borderRadius: "12px",
                fontSize: "16px",
                outline: "none",
                transition: "all 0.3s ease",
                backgroundColor: "rgba(255, 255, 255, 0.9)",
              }}
              onFocus={(e) => {
                e.target.style.borderColor = "#4ECDC4"
                e.target.style.boxShadow = "0 0 0 4px rgba(78, 205, 196, 0.1)"
              }}
              onBlur={(e) => {
                e.target.style.borderColor = "#e1e1e1"
                e.target.style.boxShadow = "none"
              }}
            />
          </div>

          <button
            type="submit"
            disabled={isLoading}
            style={{
              width: "100%",
              padding: "14px",
              backgroundColor: "#4ECDC4",
              color: "white",
              border: "none",
              borderRadius: "12px",
              fontSize: "16px",
              fontWeight: "600",
              cursor: "pointer",
              transition: "all 0.3s ease",
              position: "relative",
              overflow: "hidden",
            }}
            onMouseOver={(e) => {
              e.currentTarget.style.backgroundColor = "#FF6B6B"
              e.currentTarget.style.transform = "translateY(-2px)"
            }}
            onMouseOut={(e) => {
              e.currentTarget.style.backgroundColor = "#4ECDC4"
              e.currentTarget.style.transform = "translateY(0)"
            }}
          >
            {isLoading ? (
              <div
                style={{
                  display: "inline-block",
                  width: "20px",
                  height: "20px",
                  border: "3px solid rgba(255,255,255,0.3)",
                  borderRadius: "50%",
                  borderTopColor: "white",
                  animation: "spin 1s ease-in-out infinite",
                  style: {
                    "@keyframes spin": {
                      to: { transform: "rotate(360deg)" },
                    },
                  },
                }}
              />
            ) : (
              "Sign In"
            )}
          </button>

          <div
            style={{
              textAlign: "center",
              marginTop: "20px",
              fontSize: "14px",
              color: "#666",
            }}
          >
            Don&apos;t have an account?{" "}
            <button
              type="button"
              style={{
                background: "none",
                border: "none",
                color: "#4ECDC4",
                cursor: "pointer",
                padding: "0",
                textDecoration: "underline",
                fontSize: "14px",
              }}
              onMouseOver={(e) => (e.currentTarget.style.color = "#FF6B6B")}
              onMouseOut={(e) => (e.currentTarget.style.color = "#4ECDC4")}
            >
              Sign up
            </button>
          </div>
        </form>
      </div>
    </div>
  )
}


  ReactDOM.render(
    <LoginForm />,
    document.getElementById('react-root')
  );
</script>