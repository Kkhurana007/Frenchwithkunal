---
title: "Demonstratifs / les démonstratifs"
author: "Kunal Khurana"
date: "10-03-2025"
categories: [démonstratifs, ce, cet, cette]
image: "demonstratifs.png"

format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
          <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
          <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
---

```{=html}

::: {#react-root}
:::

<script type="text/babel">

const ProfilePage = () => {

  const { useState, useEffect } = React;

  const refreshToken = async () => {
    const storedRefreshToken = localStorage.getItem("refreshToken");

    if (!storedRefreshToken) {
      window.location.href = "/login.html";
      return null;
    }

    try {
      const response = await fetch("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/refresh-token", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ refreshToken: storedRefreshToken }),
      });

      if (!response.ok) {
        localStorage.removeItem("accessToken");
        localStorage.removeItem("refreshToken");
        window.location.href = "/login.html";
        return null;
      }

      const data = await response.json();
      localStorage.setItem("accessToken", data.accessToken);
      return data.accessToken;
    } catch (error) {
      localStorage.removeItem("accessToken");
      localStorage.removeItem("refreshToken");
      window.location.href = "/login.html";
      return null;
    }
  };

  const fetchWithAuth = async (url, options = {}) => {
    let accessToken = localStorage.getItem("accessToken");

    options.headers = {
      ...options.headers,
      Authorization: `Bearer ${accessToken}`,
      "Content-Type": "application/json",
    };

    let response = await fetch(url, options);

    if (response.status === 401) {
      console.log("Access token expired, attempting to refresh...");

      // Refresh token
      accessToken = await refreshToken();

      if (!accessToken) return null;

      options.headers.Authorization = `Bearer ${accessToken}`;
      response = await fetch(url, options);
    }

    return response.json();
  };

  useEffect(() => {
    const storedToken = localStorage.getItem('accessToken');

    if (!storedToken) {
      showNoAccessMessage();
    }
    if (storedToken) {
      const fetchData = async () => {
        const data = await fetchWithAuth("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/me", {
          method: "POST",
        });

        if (data.data.hasAccess) {
          console.log(data);

        } else {
          showNoAccessMessage();
        }

      }
      fetchData();
    }

  }, []);

  function showNoAccessMessage() {
    const profileLanguage = document.documentElement.lang || "en";
    const noAccessMessage = profileLanguage === "fr" ? `
      <div style="text-align: center; padding: 20px;">
        <h2>Vous n'avez pas accès à cette page.</h2>
        <p>Veuillez <a href="https://frenchwithkunal.ca/fr/payment.html">vous abonner</a> pour obtenir l'accès.</p>
      </div>
    ` : `
      <div style="text-align: center; padding: 20px;">
        <h2>You don't have access to this page.</h2>
        <p>Please <a href="https://frenchwithkunal.ca/payment.html">subscribe</a> to gain access.</p>
      </div>
    `;
    document.body.innerHTML = noAccessMessage;
  }

  return (
    <div></div>
  );
};

ReactDOM.render(
  <ProfilePage />,
  document.getElementById('react-root')
);
</script>

------------------------------------------------------------------------

::: {style="text-align: left; padding: 10px;"}
<a href="mailto:info@frenchwithkunal.ca" target="_blank" style="margin: 0 10px; color: #000;"><i class="fas fa-envelope fa-lg"></i></a> <a href="https://www.instagram.com/kunal.khurana7" target="_blank" style="margin: 0 10px; color: #E1306C;"><i class="fab fa-instagram fa-lg"></i></a> <a href="https://frenchwithkunal.ca" target="_blank" style="margin: 0 10px; color: #0077b5;"><i class="fas fa-globe fa-lg"></i></a> <a href="https://whatsapp.com/channel/0029Vb57n2e7dmegpjYpyi3V" target="_blank" style="margin: 0 10px; color: #25D366;"><i class="fab fa-whatsapp fa-lg"></i></a> <button onclick="copyLink()" style="background-color: #0077b5; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px;"> <i class="fas fa-copy"></i> </button> [Link copied!]{#copy-message style="margin-left: 10px; color: green; display: none;"}
:::

::: {.content-visible when-profile="english"}

Demonstratives are an essential part of French grammar. Technically, they are adjectives used alongside nouns and pronouns to help identify or specify the noun being discussed. For example, if you want to distinguish between *that particular cat* and *a cat in general*, demonstratives come into play. They change according to the gender and number of the noun they modify, making them a crucial tool for clear communication.

Here’s a quick reference table to help you understand the different forms of demonstratives in French:

- **Ce/Cet** – This/That (Masculine)
- **Cette** – This/That (Feminine)
- **Ces** – These/Those (Plural)

Let’s look at some examples to see how demonstratives are used in practice:

1. **Ce livre est intéressant.** (This book is interesting.)  
   - *Ce* is used because *livre* (book) is masculine singular.

2. **Cet arbre est grand.** (That tree is tall.)  
   - *Cet* is used before masculine singular nouns that start with a vowel or silent *h*.

3. **Cette maison est belle.** (This house is beautiful.)  
   - *Cette* is used because *maison* (house) is feminine singular.

4. **Ces fleurs sont jolies.** (These flowers are pretty.)  
   - *Ces* is used for plural nouns, regardless of gender.

Demonstratives are incredibly useful for specifying which noun you’re referring to, especially in conversations or written texts where clarity is key. To dive deeper into this topic, you can refer to the [attached PDF for more detailed explanations and examples](https://drive.google.com/file/d/1ngdA8VMsN101wkfLRurtkPGtdRN3KGhB/view?usp=drive_link).



:::


::: {.content-visisble when-profile="french"}

Les adjectifs démonstratifs sont un élément essentiel de la grammaire française. Techniquement, ce sont des adjectifs utilisés aux côtés des noms et des pronoms pour aider à identifier ou à préciser le nom dont on parle. Par exemple, si vous souhaitez distinguer *ce chat particulier* de *un chat en général*, les adjectifs démonstratifs entrent en jeu. Ils changent selon le genre et le nombre du nom qu’ils modifient, ce qui en fait un outil crucial pour une communication claire.

Voici un tableau de référence rapide pour comprendre les différentes formes des adjectifs démonstratifs en français :

- **Ce/Cet** – Ce/Cet (Masculin)
- **Cette** – Cette (Féminin)
- **Ces** – Ces (Pluriel)

Regardons quelques exemples pour voir comment les adjectifs démonstratifs sont utilisés en pratique :

1. **Ce livre est intéressant.** (This book is interesting.)  
   - *Ce* est utilisé car *livre* (book) est masculin singulier.

2. **Cet arbre est grand.** (That tree is tall.)  
   - *Cet* est utilisé avant les noms masculins singuliers qui commencent par une voyelle ou un *h* muet.

3. **Cette maison est belle.** (This house is beautiful.)  
   - *Cette* est utilisé car *maison* (house) est féminin singulier.

4. **Ces fleurs sont jolies.** (These flowers are pretty.)  
   - *Ces* est utilisé pour les noms au pluriel, quel que soit leur genre.

Les adjectifs démonstratifs sont incroyablement utiles pour préciser de quel nom on parle, surtout dans les conversations ou les textes écrits où la clarté est essentielle. Pour approfondir ce sujet, vous pouvez consulter [le PDF ci-joint pour des explications et des exemples plus détaillés](https://drive.google.com/file/d/1ngdA8VMsN101wkfLRurtkPGtdRN3KGhB/view?usp=drive_link).


:::
