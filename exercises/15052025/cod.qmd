---
title: "Le Complément d'Objet Direct (COD)"  
author: "Kunal Khurana"  
date: "05-15-2025"  
categories: [B1, grammaire, COD, exercices]  
image: "COD.png"  
format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
          <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
          <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
---

::: {style="text-align: left; padding: 10px;"}
<a href="mailto:frenchwithkunal@gmail.com" target="_blank" style="margin: 0 10px; color: #000;"><i class="fas fa-envelope fa-lg"></i></a> <a href="https://www.instagram.com/frenchwithkunal" target="_blank" style="margin: 0 10px; color: #E1306C;"><i class="fab fa-instagram fa-lg"></i></a> <a href="https://frenchwithkunal.ca" target="_blank" style="margin: 0 10px; color: #0077b5;"><i class="fas fa-globe fa-lg"></i></a> <a href="https://whatsapp.com/channel/0029Vb57n2e7dmegpjYpyi3V" target="_blank" style="margin: 0 10px; color: #25D366;"><i class="fab fa-whatsapp fa-lg"></i></a> <button onclick="copyLink()" style="background-color: #0077b5; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px;"> <i class="fas fa-copy"></i> </button> [Link copied!]{#copy-message style="margin-left: 10px; color: green; display: none;"}
:::

::: {#react-root}
:::

```{=html}
<script type="text/babel">
 const ProfilePage = () => {
  const { useState, useEffect } = React;
  const [redirectCounter, setRedirectCounter] = useState(4);
  const [isRedirecting, setIsRedirecting] = useState(false);

  const isFrench = document.documentElement.lang === "fr";

  const translations = {
    noAccess: isFrench 
      ? "Vous n'avez pas accès à cette page. Si vous pensez que vous avez accès, veuillez <a href='https://frenchwithkunal.ca/login.html'>vous connecter</a>."
      : "You don't have access to this page. If you think you have, kindly <a href='https://frenchwithkunal.ca/login.html'>login</a>.",
    subscribe: isFrench
      ? "Veuillez vous abonner pour obtenir l'accès."
      : "Please subscribe to gain access.",
    redirecting: isFrench
      ? `Redirection vers la page d'abonnement dans ${redirectCounter} secondes...`
      : `Redirecting to subscription page in ${redirectCounter} seconds...`
  };

  const refreshToken = async () => {
    const storedRefreshToken = localStorage.getItem("refreshToken");

    if (!storedRefreshToken) {
      window.location.href = "/login.html";
      return null;
    }

    try {
      const response = await fetch("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/refresh-token", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ refreshToken: storedRefreshToken }),
      });

      if (!response.ok) {
        localStorage.removeItem("accessToken");
        localStorage.removeItem("refreshToken");
        window.location.href = "/login.html";
        return null;
      }

      const data = await response.json();
      localStorage.setItem("accessToken", data.accessToken);
      return data.accessToken;
    } catch (error) {
      localStorage.removeItem("accessToken");
      localStorage.removeItem("refreshToken");
      window.location.href = "/login.html";
      return null;
    }
  };

  const fetchWithAuth = async (url, options = {}) => {
    let accessToken = localStorage.getItem("accessToken");

    options.headers = {
      ...options.headers,
      Authorization: `Bearer ${accessToken}`,
      "Content-Type": "application/json",
    };

    let response = await fetch(url, options);

    if (response.status === 401) {
      console.log("Access token expired, attempting to refresh...");

      // Refresh token
      accessToken = await refreshToken();

      if (!accessToken) return null;

      options.headers.Authorization = `Bearer ${accessToken}`;
      response = await fetch(url, options);
    }

    return response.json();
  };

  const showNoAccessMessage = () => {
    setIsRedirecting(true);
    
    const noAccessMessage = `
      <div style="text-align: center; padding: 20px;">
        <h2>${translations.noAccess}</h2>
        <p>${translations.subscribe}</p>
        <p>${translations.redirecting}</p>
      </div>
    `;
    document.body.innerHTML = noAccessMessage;
    
    // Start countdown and redirect
    const redirectInterval = setInterval(() => {
      setRedirectCounter((prev) => {
        const newCounter = prev - 1;
        if (newCounter <= 0) {
          clearInterval(redirectInterval);
          window.location.href = "https://learn.frenchwithkunal.ca/subscription";
        }
        
        // Update the countdown text
        const countdownElement = document.querySelector('p:last-child');
        if (countdownElement) {
          countdownElement.textContent = isFrench
            ? `Redirection vers la page d'abonnement dans ${newCounter} secondes...`
            : `Redirecting to subscription page in ${newCounter} seconds...`;
        }
        
        return newCounter;
      });
    }, 1000);
  };

  useEffect(() => {
    const storedToken = localStorage.getItem('accessToken');

    if(!storedToken) {
      showNoAccessMessage();
    } else {
      const fetchData = async() => {
        const data = await fetchWithAuth("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/me", {
          method: "POST",
        });

        if (data && data.data && data.data.hasAccess) {
          console.log(data);
        } else {
          showNoAccessMessage();
        }
      };
      fetchData();
    }
  }, []);

  return (
    <div></div>
  );
};

ReactDOM.render(
  <ProfilePage />,
  document.getElementById('react-root')
);
 </script>
```
::: {.content-visible when-profile="english"}

### Understanding the Direct Object (COD)  
The **COD** answers the questions **"who?" (qui?)** or **"what?" (quoi?)** after the verb. It replaces **people or things** and can be substituted with pronouns (**le, la, les, l’**).  

**Key rules:**  
1. **No preposition** before the COD.  
2. **Pronoun placement**: Before the verb (Je **la** mange).  
3. **Agreement**: Past participles agree with preceding COD in gender/number.  

---

### Exercises  

#### 1. Find the COD (underline and answer *qui ?* or *quoi ?*):  
*(Example: "Elle mange [une pomme]. → quoi ?")*  

1. Il lit **un livre**. → <input type="text" placeholder="qui/quoi" oninput="checkAnswer(this, 'quoi')"><span style="margin-left:10px;"></span>  
2. Nous voyons **Marie**. → <input type="text" placeholder="qui/quoi" oninput="checkAnswer(this, 'qui')"><span style="margin-left:10px;"></span>  
3. Tu écoutes **la radio**. → <input type="text" placeholder="qui/quoi" oninput="checkAnswer(this, 'quoi')"><span style="margin-left:10px;"></span>  

#### 2. Replace the COD with a pronoun (**le, la, les, l’**):  
*(Example: "Je mange [la pizza] → Je **la** mange.")*  

1. Elle achète **les fleurs**. → Elle <input type="text" placeholder="Pronoun" oninput="checkAnswer(this, 'les')"> achète.<span style="margin-left:10px;"></span>  
2. J’aime **ce film**. → ⚠️ Avec les verbes de goût (aimer, adorer, détester, etc.), on n'utilise généralement pas le pronom COD.
3. Vous connaissez **Paul**. → Vous <input type="text" placeholder="Pronoun" oninput="checkAnswer(this, 'le')"> connaissez.<span style="margin-left:10px;"></span>  

> **Note :** Avec les verbes de goût comme *aimer*, *adorer*, *détester*, etc., on préfère remplacer par **ça** plutôt que par un pronom COD (*le, la, les, l’*) pour des objets inanimés dans une phrase simple.

#### 3. Correct the errors:  
1. "Elle la mange la pomme." → <input type="text" placeholder="Correction" oninput="checkAnswer(this, 'Elle mange la pomme.')"><span style="margin-left:10px;"></span>  
2. "Nous les voyons les oiseaux." → <input type="text" placeholder="Correction" oninput="checkAnswer(this, 'Nous voyons les oiseaux.')"><span style="margin-left:10px;"></span>  

#### 4. Translate into French:  
1. "She eats it (the apple)." → <textarea placeholder="Translation" rows="1" oninput="checkTranslation(this, 'Elle la mange.')"></textarea><span style="margin-left:10px;"></span>  
2. "They know them (the rules)." → <textarea placeholder="Translation" rows="1" oninput="checkTranslation(this, 'Ils les connaissent.')"></textarea><span style="margin-left:10px;"></span>  

<button onclick="showAnswers()">Show answers</button>  
<button onclick="refreshPage()">Try again</button>  

---

### Notes:  
- **COD vs. COI**: If the object follows a preposition (**à, de**), it’s *not* a COD.  
- **Past participle agreement**: "Les fleurs que j’ai **achetées**" (COD before verb).  

:::

---

::: {.content-visible when-profile="french"}  

### Comprendre le COD  
Le **COD** répond aux questions **« qui ? »** ou **« quoi ? »** après le verbe. Il remplace **des personnes ou des choses** et peut être substitué par **le, la, les, l’**.  

**Règles clés** :  
1. **Pas de préposition** avant le COD.  
2. **Place du pronom** : Avant le verbe (Je **la** mange).  
3. **Accord** : Les participes passés s’accordent avec le COD placé avant.  

---

### Exercices  

#### 1. Trouvez le COD (répondez *qui ?* ou *quoi ?*) :  
*(Exemple : "Elle mange [une pomme]. → quoi ?")*  

1. Il lit **un livre**. → <input type="text" placeholder="qui/quoi" oninput="checkAnswer(this, 'quoi')"><span style="margin-left:10px;"></span>  
2. Nous voyons **Marie**. → <input type="text" placeholder="qui/quoi" oninput="checkAnswer(this, 'qui')"><span style="margin-left:10px;"></span>  
3. Tu écoutes **la radio**. → <input type="text" placeholder="qui/quoi" oninput="checkAnswer(this, 'quoi')"><span style="margin-left:10px;"></span>  

#### 2. Remplacez le COD par un pronom (**le, la, les, l’**) :  
*(Exemple : "Je mange [la pizza] → Je **la** mange.")*  

1. Elle achète **les fleurs**. → Elle <input type="text" placeholder="Pronom" oninput="checkAnswer(this, 'les')"> achète.<span style="margin-left:10px;"></span>  
2. J’aime **ce film**. → ⚠️ Avec les verbes de goût (aimer, adorer, détester, etc.), on n'utilise généralement pas le pronom COD.
3. Vous connaissez **Paul**. → Vous <input type="text" placeholder="Pronom" oninput="checkAnswer(this, 'le')"> connaissez.<span style="margin-left:10px;"></span>  

> **Note :** Avec les verbes de goût comme *aimer*, *adorer*, *détester*, etc., on préfère remplacer par **ça** plutôt que par un pronom COD (*le, la, les, l’*) pour des objets inanimés dans une phrase simple.

#### 3. Corrigez les erreurs :  
1. "Elle la mange la pomme." → <input type="text" placeholder="Correction" oninput="checkAnswer(this, 'Elle mange la pomme.')"><span style="margin-left:10px;"></span>  
2. "Nous les voyons les oiseaux." → <input type="text" placeholder="Correction" oninput="checkAnswer(this, 'Nous voyons les oiseaux.')"><span style="margin-left:10px;"></span>  

#### 4. Traduisez en français :  
1. "She eats it (the apple)." → <textarea placeholder="Traduction" rows="1" oninput="checkTranslation(this, 'Elle la mange.')"></textarea><span style="margin-left:10px;"></span>  
2. "They know them (the rules)." → <textarea placeholder="Traduction" rows="1" oninput="checkTranslation(this, 'Ils les connaissent.')"></textarea><span style="margin-left:10px;"></span>  

<button onclick="showAnswers()">Voir les réponses</button>  
<button onclick="refreshPage()">Nouvel essai</button>  

---

### Notes :  
- **COD vs COI** : Si l’objet suit une préposition (**à, de**), ce n’est *pas* un COD.  
- **Accord du participe passé** : "Les fleurs que j’ai **achetées**" (COD avant le verbe).  

:::

<script>
function checkAnswer(input, correctAnswer) {
    const span = input.nextElementSibling;
    if (input.value.trim().toLowerCase() === correctAnswer.toLowerCase()) {
        span.textContent = "✓ Correct";
        span.style.color = "green";
    } else {
        span.textContent = "";
    }
}

function checkTranslation(textarea, correctTranslation) {
    const span = textarea.nextElementSibling;
    if (textarea.value.trim().toLowerCase() === correctTranslation.toLowerCase()) {
        span.textContent = "✓ Correct";
        span.style.color = "green";
    } else {
        span.textContent = "";
    }
}

function showAnswers() {
    document.querySelectorAll('input[type="text"], textarea').forEach(el => {
        const correct = el.getAttribute('oninput')?.match(/'([^']+)'/)?.[1];
        if (correct) {
            const span = el.nextElementSibling;
            span.textContent = `Réponse : ${correct}`;
            span.style.color = "blue";
        }
    });
}

function refreshPage() {
    location.reload();
}
</script>

--- 
