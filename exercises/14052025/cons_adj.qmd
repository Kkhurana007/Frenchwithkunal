---
title: "Adjective Constructions: à/de + Noun or Infinitive"  
author: "Kunal Khurana"  
date: "05-12-2025"  
categories: [A2/B1, grammar, adjectives, exercises]  
image: "adj.png"  
format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
          <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
          <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
---

::: {style="text-align: left; padding: 10px;"}
<a href="mailto:frenchwithkunal@gmail.com" target="_blank" style="margin: 0 10px; color: #000;"><i class="fas fa-envelope fa-lg"></i></a> <a href="https://www.instagram.com/frenchwithkunal" target="_blank" style="margin: 0 10px; color: #E1306C;"><i class="fab fa-instagram fa-lg"></i></a> <a href="https://frenchwithkunal.ca" target="_blank" style="margin: 0 10px; color: #0077b5;"><i class="fas fa-globe fa-lg"></i></a> <a href="https://whatsapp.com/channel/0029Vb57n2e7dmegpjYpyi3V" target="_blank" style="margin: 0 10px; color: #25D366;"><i class="fab fa-whatsapp fa-lg"></i></a> <button onclick="copyLink()" style="background-color: #0077b5; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px;"> <i class="fas fa-copy"></i> </button> [Link copied!]{#copy-message style="margin-left: 10px; color: green; display: none;"}
:::

::: {#react-root}
:::

```{=html}
<script type="text/babel">
 const ProfilePage = () => {
  const { useState, useEffect } = React;
  const [redirectCounter, setRedirectCounter] = useState(4);
  const [isRedirecting, setIsRedirecting] = useState(false);

  const isFrench = document.documentElement.lang === "fr";

  const translations = {
    noAccess: isFrench 
      ? "Vous n'avez pas accès à cette page. Si vous pensez que vous avez accès, veuillez <a href='https://frenchwithkunal.ca/login.html'>vous connecter</a>."
      : "You don't have access to this page. If you think you have, kindly <a href='https://frenchwithkunal.ca/login.html'>login</a>.",
    subscribe: isFrench
      ? "Veuillez vous abonner pour obtenir l'accès."
      : "Please subscribe to gain access.",
    redirecting: isFrench
      ? `Redirection vers la page d'abonnement dans ${redirectCounter} secondes...`
      : `Redirecting to subscription page in ${redirectCounter} seconds...`
  };

  const refreshToken = async () => {
    const storedRefreshToken = localStorage.getItem("refreshToken");

    if (!storedRefreshToken) {
      window.location.href = "/login.html";
      return null;
    }

    try {
      const response = await fetch("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/refresh-token", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ refreshToken: storedRefreshToken }),
      });

      if (!response.ok) {
        localStorage.removeItem("accessToken");
        localStorage.removeItem("refreshToken");
        window.location.href = "/login.html";
        return null;
      }

      const data = await response.json();
      localStorage.setItem("accessToken", data.accessToken);
      return data.accessToken;
    } catch (error) {
      localStorage.removeItem("accessToken");
      localStorage.removeItem("refreshToken");
      window.location.href = "/login.html";
      return null;
    }
  };

  const fetchWithAuth = async (url, options = {}) => {
    let accessToken = localStorage.getItem("accessToken");

    options.headers = {
      ...options.headers,
      Authorization: `Bearer ${accessToken}`,
      "Content-Type": "application/json",
    };

    let response = await fetch(url, options);

    if (response.status === 401) {
      console.log("Access token expired, attempting to refresh...");

      // Refresh token
      accessToken = await refreshToken();

      if (!accessToken) return null;

      options.headers.Authorization = `Bearer ${accessToken}`;
      response = await fetch(url, options);
    }

    return response.json();
  };

  const showNoAccessMessage = () => {
    setIsRedirecting(true);
    
    const noAccessMessage = `
      <div style="text-align: center; padding: 20px;">
        <h2>${translations.noAccess}</h2>
        <p>${translations.subscribe}</p>
        <p>${translations.redirecting}</p>
      </div>
    `;
    document.body.innerHTML = noAccessMessage;
    
    // Start countdown and redirect
    const redirectInterval = setInterval(() => {
      setRedirectCounter((prev) => {
        const newCounter = prev - 1;
        if (newCounter <= 0) {
          clearInterval(redirectInterval);
          window.location.href = "https://frenchwithkunal.ca/payment.html";
        }
        
        // Update the countdown text
        const countdownElement = document.querySelector('p:last-child');
        if (countdownElement) {
          countdownElement.textContent = isFrench
            ? `Redirection vers la page d'abonnement dans ${newCounter} secondes...`
            : `Redirecting to subscription page in ${newCounter} seconds...`;
        }
        
        return newCounter;
      });
    }, 1000);
  };

  useEffect(() => {
    const storedToken = localStorage.getItem('accessToken');

    if(!storedToken) {
      showNoAccessMessage();
    } else {
      const fetchData = async() => {
        const data = await fetchWithAuth("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/me", {
          method: "POST",
        });

        if (data && data.data && data.data.hasAccess) {
          console.log(data);
        } else {
          showNoAccessMessage();
        }
      };
      fetchData();
    }
  }, []);

  return (
    <div></div>
  );
};

ReactDOM.render(
  <ProfilePage />,
  document.getElementById('react-root')
);
 </script>
```

::: {.content-visible when-profile="english"}  

### Understanding Adjective Constructions  
Some French adjectives require **à** or **de** when followed by a noun or infinitive. The choice depends on the adjective’s inherent meaning.  

#### 1. **à/de + Noun**  
- **à + noun**: Indicates purpose, function, or characteristic.  
  - *Un verre **à eau*** (a water glass) → **for** water.  
  - *Une machine **à laver*** (a washing machine) → **for** washing.  
- **de + noun**: Indicates material, origin, or possession.  
  - *Une tasse **de thé*** (a cup **of** tea).  
  - *Un livre **de français*** (a French book).  

#### 2. **à/de + Infinitive**  
- **à + infinitive**: Often implies necessity or purpose.  
  - *C’est facile **à comprendre*** (It’s easy **to understand**).  
  - *Une décision **à prendre*** (a decision **to make**).  
- **de + infinitive**: Often implies possibility or consequence.  
  - *Je suis content **de te voir*** (I’m happy **to see you**).  
  - *Il est responsable **de terminer*** (He’s responsible **for finishing**).  

---

### Exercises  

#### 1. Choose *à* or *de* for nouns:  
___ café (tasse) ☕ → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>  

___ pieds (chaussettes) 🧦 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>  

___ lettres (boîte) 📬 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'aux')"><span style="margin-left:10px;"></span>  

___ musique (instrument) 🎻 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>  

#### 2. Choose *à* or *de* for infinitives:  
"Elle est prête ___ partir." ✈️ → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'à')"><span style="margin-left:10px;"></span>  

"Ce texte est difficile ___ traduire." 📝 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'à')"><span style="margin-left:10px;"></span>  

"Je suis fier ___ réussir." 🏆 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>  

"Un projet ___ finir." 📅 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'à')"><span style="margin-left:10px;"></span>  

#### 3. Correct the preposition errors:  
"Une fourchette à salade" → <input type="text" placeholder="Correct phrase" oninput="checkAnswer(this, 'une fourchette à salade')"><span style="margin-left:10px;"></span> *(Note: No error! Trick question.)*  

"Un sac de main" 👜 → <input type="text" placeholder="Correct phrase" oninput="checkAnswer(this, 'un sac à main')"><span style="margin-left:10px;"></span>  

"Content à vous aider" → <input type="text" placeholder="Correct phrase" oninput="checkAnswer(this, 'content de vous aider')"><span style="margin-left:10px;"></span>  

#### 4. Translate into French (include prepositions!):  
"A spoon for soup." → <textarea placeholder="French..." rows="1" cols="30" oninput="checkTranslation(this, 'une cuillère à soupe')"></textarea><span style="margin-left:10px;"></span>  

"Happy to help you." → <textarea placeholder="French..." rows="1" cols="30" oninput="checkTranslation(this, 'heureux de vous aider')"></textarea><span style="margin-left:10px;"></span>  

<button onclick="showAnswers()">Show All Answers</button>  
<button onclick="refreshPage()">Refresh Exercises</button>  

<script>  
function showAnswers() {  
    document.querySelectorAll('input[type="text"]').forEach(input => {  
        const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];  
        input.value = correct;  
        const feedback = input.nextElementSibling;  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    });  

    document.querySelectorAll('textarea').forEach(textarea => {  
        const correct = textarea.getAttribute('oninput').match(/'([^']+)'/)[1];  
        textarea.value = correct;  
        const feedback = textarea.nextElementSibling;  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    });  
}  

function refreshPage() {  
    location.reload();  
}  

function checkAnswer(input, correctAnswer) {  
    const feedback = input.nextElementSibling;  
    if (input.value.trim().toLowerCase() === correctAnswer.toLowerCase()) {  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    } else if (input.value.trim()) {  
        feedback.textContent = "✗ Try again!";  
        feedback.style.color = "red";  
    }  
}  

function checkAllAnswers() {  
    document.querySelectorAll('input[type="text"]').forEach(input => {  
        const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];  
        checkAnswer(input, correct);  
    });  

    document.querySelectorAll('textarea').forEach(textarea => {  
        const correct = textarea.getAttribute('oninput').match(/'([^']+)'/)[1];  
        checkTranslation(textarea, correct);  
    });  
}  

function checkTranslation(textarea, correctAnswer) {  
    const feedback = textarea.nextElementSibling;  
    if (textarea.value.trim().toLowerCase() === correctAnswer.toLowerCase()) {  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    } else if (textarea.value.trim()) {  
        feedback.textContent = "✗ Try again!";  
        feedback.style.color = "red";  
    }  
}  

function checkAllAnswers() {  
    document.querySelectorAll('input[type="text"]').forEach(input => {  
        const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];  
        input.value = correct;  
        const feedback = input.nextElementSibling;  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    });  

    document.querySelectorAll('textarea').forEach(textarea => {  
        const correct = textarea.getAttribute('oninput').match(/'([^']+)'/)[1];  
        textarea.value = correct;  
        const feedback = textarea.nextElementSibling;  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    });  
}  
</script>  

---

### Notes:  
- **Mnemonics**:  
  - **à** = **action/purpose** (think *à table* = "for eating").  
  - **de** = **origin/content** (think *de Paris* = "from Paris").  
- **Common Adjective + Infinitive Pairs**:  
  - *à*: *facile à, prêt à, lent à*.  
  - *de*: *content de, responsable de, capable de*.  
- **Exceptions**:  
  - *C’est bon à savoir* (It’s good to know) vs. *C’est bon de savoir* (It feels good to know).  

:::  

::: {.content-visible when-profile="french"}

### Comprendre les constructions adjectivales

Certains adjectifs français exigent **à** ou **de** lorsqu’ils sont suivis d’un nom ou d’un infinitif. Le choix dépend du sens de l’adjectif.

#### 1. **à/de + nom**
- **à + nom** : Indique le but, la fonction ou la caractéristique.
    - *Un verre **à eau*** (un verre pour l’eau)
    - *Une machine **à laver*** (une machine pour laver)
- **de + nom** : Indique la matière, l’origine ou la possession.
    - *Une tasse **de thé*** (une tasse de thé)
    - *Un livre **de français*** (un livre de français)

#### 2. **à/de + infinitif**
- **à + infinitif** : Souvent une nécessité ou un but.
    - *C’est facile **à comprendre*** (C’est facile à comprendre)
    - *Une décision **à prendre*** (Une décision à prendre)
- **de + infinitif** : Souvent une possibilité ou une conséquence.
    - *Je suis content **de te voir*** (Je suis content de te voir)
    - *Il est responsable **de terminer*** (Il est responsable de terminer)

---

### Exercices

#### 1. Choisissez *à* ou *de* pour les noms :
___ café (tasse) ☕ → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>

___ pieds (chaussettes) 🧦 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>

___ lettres (boîte) 📬 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'aux')"><span style="margin-left:10px;"></span>

___ musique (instrument) 🎻 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>

#### 2. Choisissez *à* ou *de* pour les infinitifs :
"Elle est prête ___ partir." ✈️ → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'à')"><span style="margin-left:10px;"></span>

"Ce texte est difficile ___ traduire." 📝 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'à')"><span style="margin-left:10px;"></span>

"Je suis fier ___ réussir." 🏆 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'de')"><span style="margin-left:10px;"></span>

"Un projet ___ finir." 📅 → <input type="text" placeholder="à/de" oninput="checkAnswer(this, 'à')"><span style="margin-left:10px;"></span>

#### 3. Corrigez les erreurs de préposition :
"Une fourchette à salade" → <input type="text" placeholder="Phrase correcte" oninput="checkAnswer(this, 'une fourchette à salade')"><span style="margin-left:10px;"></span> *(Attention : Pas d’erreur ! Question piège.)*

"Un sac de main" 👜 → <input type="text" placeholder="Phrase correcte" oninput="checkAnswer(this, 'un sac à main')"><span style="margin-left:10px;"></span>

"Content à vous aider" → <input type="text" placeholder="Phrase correcte" oninput="checkAnswer(this, 'content de vous aider')"><span style="margin-left:10px;"></span>

#### 4. Traduisez en français (incluez les prépositions !) :
"A spoon for soup." → <textarea placeholder="Français..." rows="1" cols="30" oninput="checkTranslation(this, 'une cuillère à soupe')"></textarea><span style="margin-left:10px;"></span>

"Happy to help you." → <textarea placeholder="Français..." rows="1" cols="30" oninput="checkTranslation(this, 'heureux de vous aider')"></textarea><span style="margin-left:10px;"></span>

<button onclick="showAnswers()">Afficher toutes les réponses</button>
<button onclick="refreshPage()">Recommencer les exercices</button>

<script>
function showAnswers() {
        document.querySelectorAll('input[type="text"]').forEach(input => {
                const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];
                input.value = correct;
                const feedback = input.nextElementSibling;
                feedback.textContent = "✓ Correct !";
                feedback.style.color = "green";
        });

        document.querySelectorAll('textarea').forEach(textarea => {
                const correct = textarea.getAttribute('oninput').match(/'([^']+)'/)[1];
                textarea.value = correct;
                const feedback = textarea.nextElementSibling;
                feedback.textContent = "✓ Correct !";
                feedback.style.color = "green";
        });
}

function refreshPage() {
        location.reload();
}

function checkAnswer(input, correctAnswer) {
        const feedback = input.nextElementSibling;
        if (input.value.trim().toLowerCase() === correctAnswer.toLowerCase()) {
                feedback.textContent = "✓ Correct !";
                feedback.style.color = "green";
        } else if (input.value.trim()) {
                feedback.textContent = "✗ Essayez encore !";
                feedback.style.color = "red";
        } else {
                feedback.textContent = "";
        }
}

function checkTranslation(textarea, correctAnswer) {
        const feedback = textarea.nextElementSibling;
        if (textarea.value.trim().toLowerCase() === correctAnswer.toLowerCase()) {
                feedback.textContent = "✓ Correct !";
                feedback.style.color = "green";
        } else if (textarea.value.trim()) {
                feedback.textContent = "✗ Essayez encore !";
                feedback.style.color = "red";
        } else {
                feedback.textContent = "";
        }
}
</script>

---

### Notes :
- **Mnémotechniques** :
    - **à** = **action/but** (pensez à *à table* = "pour manger").
    - **de** = **origine/contenu** (pensez à *de Paris* = "de Paris").
- **Paires adjectif + infinitif courantes** :
    - *à* : *facile à, prêt à, lent à*.
    - *de* : *content de, responsable de, capable de*.
- **Exceptions** :
    - *C’est bon à savoir* (utile à savoir) vs. *C’est bon de savoir* (ça fait plaisir de savoir).

:::
