---
title: "Exercises: Common French Thoughts & Expressions"
author: "Kunal Khurana"
date: "05-12-2025"
categories: [A1/A2, vocabulary, expressions, sentence building]
image: "expressions.png"
format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
          <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
          <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
---

::: {style="text-align: left; padding: 10px;"}
<a href="mailto:frenchwithkunal@gmail.com" target="_blank" style="margin: 0 10px; color: #000;"><i class="fas fa-envelope fa-lg"></i></a> <a href="https://www.instagram.com/frenchwithkunal" target="_blank" style="margin: 0 10px; color: #E1306C;"><i class="fab fa-instagram fa-lg"></i></a> <a href="https://frenchwithkunal.ca" target="_blank" style="margin: 0 10px; color: #0077b5;"><i class="fas fa-globe fa-lg"></i></a> <a href="https://whatsapp.com/channel/0029Vb57n2e7dmegpjYpyi3V" target="_blank" style="margin: 0 10px; color: #25D366;"><i class="fab fa-whatsapp fa-lg"></i></a> <button onclick="copyLink()" style="background-color: #0077b5; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px;"> <i class="fas fa-copy"></i> </button> [Link copied!]{#copy-message style="margin-left: 10px; color: green; display: none;"}
:::

::: {#react-root}
:::

```{=html}
<script type="text/babel">
 const ProfilePage = () => {
  const { useState, useEffect } = React;
  const [redirectCounter, setRedirectCounter] = useState(4);
  const [isRedirecting, setIsRedirecting] = useState(false);

  const isFrench = document.documentElement.lang === "fr";

  const translations = {
    noAccess: isFrench 
      ? "Vous n'avez pas accès à cette page. Si vous pensez que vous avez accès, veuillez <a href='https://frenchwithkunal.ca/login.html'>vous connecter</a>."
      : "You don't have access to this page. If you think you have, kindly <a href='https://frenchwithkunal.ca/login.html'>login</a>.",
    subscribe: isFrench
      ? "Veuillez vous abonner pour obtenir l'accès."
      : "Please subscribe to gain access.",
    redirecting: isFrench
      ? `Redirection vers la page d'abonnement dans ${redirectCounter} secondes...`
      : `Redirecting to subscription page in ${redirectCounter} seconds...`
  };

  const refreshToken = async () => {
    const storedRefreshToken = localStorage.getItem("refreshToken");

    if (!storedRefreshToken) {
      window.location.href = "/login.html";
      return null;
    }

    try {
      const response = await fetch("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/refresh-token", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ refreshToken: storedRefreshToken }),
      });

      if (!response.ok) {
        localStorage.removeItem("accessToken");
        localStorage.removeItem("refreshToken");
        window.location.href = "/login.html";
        return null;
      }

      const data = await response.json();
      localStorage.setItem("accessToken", data.accessToken);
      return data.accessToken;
    } catch (error) {
      localStorage.removeItem("accessToken");
      localStorage.removeItem("refreshToken");
      window.location.href = "/login.html";
      return null;
    }
  };

  const fetchWithAuth = async (url, options = {}) => {
    let accessToken = localStorage.getItem("accessToken");

    options.headers = {
      ...options.headers,
      Authorization: `Bearer ${accessToken}`,
      "Content-Type": "application/json",
    };

    let response = await fetch(url, options);

    if (response.status === 401) {
      console.log("Access token expired, attempting to refresh...");

      // Refresh token
      accessToken = await refreshToken();

      if (!accessToken) return null;

      options.headers.Authorization = `Bearer ${accessToken}`;
      response = await fetch(url, options);
    }

    return response.json();
  };

  const showNoAccessMessage = () => {
    setIsRedirecting(true);
    
    const noAccessMessage = `
      <div style="text-align: center; padding: 20px;">
        <h2>${translations.noAccess}</h2>
        <p>${translations.subscribe}</p>
        <p>${translations.redirecting}</p>
      </div>
    `;
    document.body.innerHTML = noAccessMessage;
    
    // Start countdown and redirect
    const redirectInterval = setInterval(() => {
      setRedirectCounter((prev) => {
        const newCounter = prev - 1;
        if (newCounter <= 0) {
          clearInterval(redirectInterval);
          window.location.href = "https://learn.frenchwithkunal.ca/subscription";
        }
        
        // Update the countdown text
        const countdownElement = document.querySelector('p:last-child');
        if (countdownElement) {
          countdownElement.textContent = isFrench
            ? `Redirection vers la page d'abonnement dans ${newCounter} secondes...`
            : `Redirecting to subscription page in ${newCounter} seconds...`;
        }
        
        return newCounter;
      });
    }, 1000);
  };

  useEffect(() => {
    const storedToken = localStorage.getItem('accessToken');

    if(!storedToken) {
      showNoAccessMessage();
    } else {
      const fetchData = async() => {
        const data = await fetchWithAuth("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/auth/me", {
          method: "POST",
        });

        if (data && data.data && data.data.hasAccess) {
          console.log(data);
        } else {
          showNoAccessMessage();
        }
      };
      fetchData();
    }
  }, []);

  return (
    <div></div>
  );
};

ReactDOM.render(
  <ProfilePage />,
  document.getElementById('react-root')
);
 </script>
```

::: {.content-visible when-profile="english"}


### **Exercises: Common French Thoughts & Expressions**  

**Categories:** A1/A2, vocabulary, expressions, sentence building  

#### **1. Fill in the blanks with the correct word/phrase:**  
Complete these common French expressions with the missing word.  

- "___-ci" (this one) → <input type="text" placeholder="celui/celle" oninput="checkAnswer(this, 'celui')"> <span style="margin-left:10px;"></span>  
- "Je ___ fatigué(e)" (I am tired) → <input type="text" placeholder="suis/être" oninput="checkAnswer(this, 'suis')"> <span style="margin-left:10px;"></span>  
- "___ plaisir" (with pleasure) → <input type="text" placeholder="av.." oninput="checkAnswer(this, 'avec')"> <span style="margin-left:10px;"></span>  
- "Qu'est-ce que tu ___ ?" (What are you doing?) → <input type="text" placeholder="fa.." oninput="checkAnswer(this, 'fais')"> <span style="margin-left:10px;"></span>  
- "___ va ?" (How’s it going?) → <input type="text" placeholder="comment" oninput="checkAnswer(this, 'comment ça')"> <span style="margin-left:10px;"></span>  

---

#### **2. Match the French expression to its English equivalent:**  
Draw a line (or type the letter) to match.  

- "Ça dépend" (It depends) → <input type="text" placeholder="c" oninput="checkAnswer(this, 'c')"> <span style="margin-left:10px;"></span>  
- "Pas de problème" (No problem) → <input type="text" placeholder="d" oninput="checkAnswer(this, 'd')"> <span style="margin-left:10px;"></span>  
- "It depends" (Ça dépend) → <input type="text" placeholder="a" oninput="checkAnswer(this, 'a')"> <span style="margin-left:10px;"></span>  
- "No problem" (Pas de problème) → <input type="text" placeholder="b" oninput="checkAnswer(this, 'b')"> <span style="margin-left:10px;"></span>  

---

#### **3. Translate these common phrases into French:**  
- "I don’t understand." (Je ne comprends pas) → <input type="text" placeholder="je ne..." oninput="checkAnswer(this, 'je ne comprends pas')"> <span style="margin-left:10px;"></span>  
- "See you tomorrow!" (À demain!) → <input type="text" placeholder="à de..." oninput="checkAnswer(this, 'à demain')"> <span style="margin-left:10px;"></span>  
- "What time is it?" (Quelle heure est-il ?) → <input type="text" placeholder="quelle..." oninput="checkAnswer(this, 'quelle heure est-il')"> <span style="margin-left:10px;"></span>  

---

#### **4. Write a sentence using the prompt:**  
- **Prompt:** Express surprise about the weather.  
  → <textarea placeholder="Quel temps bizarre !" rows="2" cols="50"></textarea>  
- **Prompt:** Ask someone’s opinion about a movie.  
  → <textarea placeholder="Tu as aimé le film ?" rows="2" cols="50"></textarea>  

---

#### **5. Correct the errors in these sentences:**  
- "Je suis 20 ans." → <input type="text" placeholder="J'ai 20 ans." oninput="checkAnswer(this, 'j\'ai 20 ans')"> <span style="margin-left:10px;"></span>  
- "Elle va au supermarché demain." (Correct if the speaker is female) → <input type="text" placeholder="Correct as is!" oninput="checkAnswer(this, 'correct as is')"> <span style="margin-left:10px;"></span>  

---

#### **6. Fill in the dialogue:**  
**Context:** Ordering coffee at a café.  
- "Bonjour, je voudrais ___ café, s’il vous plaît." → <input type="text" placeholder="un" oninput="checkAnswer(this, 'un')">  
- "___ sucre ?" (With sugar?) → <input type="text" placeholder="avec" oninput="checkAnswer(this, 'avec')">  

---

<button onclick="checkAllAnswers()">Check Answers</button> 
<button onclick="showAllAnswers()">Show All Answers</button>

<script>  
function checkAnswer(input, correctAnswer) {  
    const feedback = input.nextElementSibling;  
    if (input.value.trim().toLowerCase() === correctAnswer.toLowerCase()) {  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    } else if (input.value.trim()) {  
        feedback.textContent = "✗ Try again!";  
        feedback.style.color = "red";  
    }  
}  

function checkAllAnswers() {  
    document.querySelectorAll('input[type="text"]').forEach(input => {  
        const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];  
        checkAnswer(input, correct);  
    });  
}  

function showAllAnswers() {  
    document.querySelectorAll('input[type="text"]').forEach(input => {  
        const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];  
        input.value = correct;  
        const feedback = input.nextElementSibling;  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    });  
}  

</script>  

:::


::: {.content-visible when-profile="french"}

### **Exercices : Pensées et expressions françaises courantes**  
**Catégories :** A1/A2, vocabulaire, expressions, construction de phrases  

#### **1. Complétez les expressions avec le mot/phrase correct(e) :**  
Complétez ces expressions françaises courantes avec le mot manquant.  

- "___-ci" (celui-ci/celle-ci) → <input type="text" placeholder="celui/celle" oninput="checkAnswer(this, 'celui')"> <span style="margin-left:10px;"></span>  
- "Je ___ fatigué(e)" (je suis fatigué(e)) → <input type="text" placeholder="suis/être" oninput="checkAnswer(this, 'suis')"> <span style="margin-left:10px;"></span>  
- "___ plaisir" (avec plaisir) → <input type="text" placeholder="av.." oninput="checkAnswer(this, 'avec')"> <span style="margin-left:10px;"></span>  
- "Qu'est-ce que tu ___ ?" (Que fais-tu ?) → <input type="text" placeholder="fa.." oninput="checkAnswer(this, 'fais')"> <span style="margin-left:10px;"></span>  
- "___ va ?" (Comment ça va ?) → <input type="text" placeholder="comment" oninput="checkAnswer(this, 'comment ça')"> <span style="margin-left:10px;"></span>  

---

#### **2. Associez l’expression française à son équivalent anglais :**  
Tracez une ligne (ou tapez la lettre) pour associer.  

- "Ça dépend" (It depends) → <input type="text" placeholder="c" oninput="checkAnswer(this, 'c')"> <span style="margin-left:10px;"></span>  
- "Pas de problème" (No problem) → <input type="text" placeholder="d" oninput="checkAnswer(this, 'd')"> <span style="margin-left:10px;"></span>  
- "It depends" (Ça dépend) → <input type="text" placeholder="a" oninput="checkAnswer(this, 'a')"> <span style="margin-left:10px;"></span>  
- "No problem" (Pas de problème) → <input type="text" placeholder="b" oninput="checkAnswer(this, 'b')"> <span style="margin-left:10px;"></span>  

---

#### **3. Traduisez ces phrases courantes en français :**  
- "Je ne comprends pas." (I don’t understand) → <input type="text" placeholder="je ne..." oninput="checkAnswer(this, 'je ne comprends pas')"> <span style="margin-left:10px;"></span>  
- "À demain !" (See you tomorrow!) → <input type="text" placeholder="à de..." oninput="checkAnswer(this, 'à demain')"> <span style="margin-left:10px;"></span>  
- "Quelle heure est-il ?" (What time is it?) → <input type="text" placeholder="quelle..." oninput="checkAnswer(this, 'quelle heure est-il')"> <span style="margin-left:10px;"></span>  

---

#### **4. Écrivez une phrase en utilisant l’indice :**  
- **Indice :** Exprimez la surprise à propos du temps.  
    → <textarea placeholder="Quel temps bizarre !" rows="2" cols="50"></textarea>  
- **Indice :** Demandez l’avis de quelqu’un sur un film.  
    → <textarea placeholder="Tu as aimé le film ?" rows="2" cols="50"></textarea>  

---

#### **5. Corrigez les erreurs dans ces phrases :**  
- "Je suis 20 ans." → <input type="text" placeholder="J'ai 20 ans." oninput="checkAnswer(this, 'j\'ai 20 ans')"> <span style="margin-left:10px;"></span>  
- "Elle va au supermarché demain." (Correct si la personne est une femme) → <input type="text" placeholder="Correct as is!" oninput="checkAnswer(this, 'correct as is')"> <span style="margin-left:10px;"></span>  

---

#### **6. Complétez le dialogue :**  
**Contexte :** Commander un café au café.  
- "Bonjour, je voudrais ___ café, s’il vous plaît." → <input type="text" placeholder="un" oninput="checkAnswer(this, 'un')">  
- "___ sucre ?" (Avec du sucre ?) → <input type="text" placeholder="avec" oninput="checkAnswer(this, 'avec')">  

---

<button onclick="checkAllAnswers()">Vérifier les réponses</button>  
<button onclick="showAllAnswers()">Afficher toutes les réponses</button>  

<script>  
function checkAnswer(input, correctAnswer) {  
    const feedback = input.nextElementSibling;  
    if (input.value.trim().toLowerCase() === correctAnswer.toLowerCase()) {  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    } else if (input.value.trim()) {  
        feedback.textContent = "✗ Try again!";  
        feedback.style.color = "red";  
    }  
}  

function checkAllAnswers() {  
    document.querySelectorAll('input[type="text"]').forEach(input => {  
        const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];  
        checkAnswer(input, correct);  
    });  
}  

function showAllAnswers() {  
    document.querySelectorAll('input[type="text"]').forEach(input => {  
        const correct = input.getAttribute('oninput').match(/'([^']+)'/)[1];  
        input.value = correct;  
        const feedback = input.nextElementSibling;  
        feedback.textContent = "✓ Correct!";  
        feedback.style.color = "green";  
    });  
}  
</script>  


:::