---
title: "Contact Us"

format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
          <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
          <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
---

:::: {.content-visible when-profile="english"}
We'd love to hear from you! Whether you have a question about our services, feedback, or need support, our team is here to help.

## Get in Touch

**Email:** [info\@frenchwithkunal.ca](mailto:info@frenchwithkunal.ca)

::: {#contact-form-root}
:::

<!-- React Contact Form Will Render Here -->
::::

:::: {.content-visible when-profile="french"}
Nous serions ravis de vous entendre! Que vous ayez une question sur nos services, des commentaires, ou besoin de soutien, notre équipe est là pour vous aider.

## Nous contacter

**Courriel:** [info\@frenchwithkunal.ca](mailto:info@frenchwithkunal.ca)

::: {#contact-form-root}
:::

<!-- React Contact Form Will Render Here Too -->
::::

\`\`\`{=html}

```{=html}
<script type="text/babel">

const ContactForm = () => {
  const { useState } = React;
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [message, setMessage] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [feedback, setFeedback] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    setFeedback("");

    try {
      const response = await fetch("https://frenchwithkunal-cdf6ea3f88ce.herokuapp.com/api/v1/responses/create-response", { 
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ name, email, message }),
      });

      if (!response.ok) {
        throw new Error("Failed to send message.");
      }

      setFeedback("Your message has been sent successfully!");
      setName("");
      setEmail("");
      setMessage("");
    } catch (error) {
      console.error(error);
      setFeedback("There was an error sending your message. Please try again later.");
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="container mt-4">
      <h3>Send Us a Message</h3>
      {feedback && <div className="alert alert-info">{feedback}</div>}
      <form onSubmit={handleSubmit}>
        <div className="mb-3">
          <label className="form-label">Name</label>
          <input 
            type="text" 
            className="form-control" 
            value={name} 
            onChange={(e) => setName(e.target.value)}
            required 
          />
        </div>

        <div className="mb-3">
          <label className="form-label">Email</label>
          <input 
            type="email" 
            className="form-control" 
            value={email} 
            onChange={(e) => setEmail(e.target.value)}
            required 
          />
        </div>

        <div className="mb-3">
          <label className="form-label">Message</label>
          <textarea 
            className="form-control" 
            rows="4"
            value={message}
            onChange={(e) => setMessage(e.target.value)}
            required
          ></textarea>
        </div>

        <button type="submit" className="btn btn-primary" disabled={isSubmitting}>
          {isSubmitting ? "Sending..." : "Send Message"}
        </button>
      </form>
    </div>
  );
};

ReactDOM.render(
  <ContactForm />,
  document.getElementById('contact-form-root')
);
</script>
```